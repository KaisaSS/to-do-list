{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["ToDoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","ToDo","toDos","completeToDo","removeToDo","updateToDo","setEdit","map","toDo","index","isComplete","onClick","ToDoList","setToDos","test","newToDos","updatedToDos","removeArr","filter","toDoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA2DeA,MAzDf,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOV,QAcpB,OACE,sBAAMW,UAAU,aAAaC,SAZV,SAACH,GACpBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGRC,EAAS,KAIT,SACGL,EAAME,KACL,qCACE,uBACEoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,mBACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,oBAAlB,4BAGF,qCACE,uBACEQ,KAAK,OACLC,YAAY,eACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,cACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,eAAlB,gC,OCjBKa,MA/Bf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwB9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAI9B,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAACZ,GACpB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBAAKrB,UAAWoB,EAAKE,WAAa,qBAAuB,YAAzD,UACE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CAAsBuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAAKH,UAAU,gBACpE,cAAC,IAAD,CAAeuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAASP,UAAU,mBANbqB,OC0BhEG,MA7Cf,WACE,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAmCA,OACE,gCACE,6DACA,cAAC,EAAD,CAAUxB,SApCE,SAACmB,GACf,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA8BP,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdH,SAACZ,GACpB,IAAIyB,EAAed,EAAMK,KAAI,SAACC,GAI5B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAOyCZ,WApBjC,SAACb,GAClB,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAACV,GAAD,OAAUA,EAAKjB,KAAOA,KAE1DsB,EAASI,IAiBiEZ,WA3BzD,SAACc,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG5CkB,GAAS,SAACQ,GAAD,OAAUA,EAAKd,KAAI,SAACe,GAAD,OAAWA,EAAK/B,KAAO4B,EAASC,EAAWE,eCT5DC,MARf,WACE,OACE,qBAAKnC,UAAU,aAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90bcbe6c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction ToDoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"to-do-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Update your item\"\n            value={input}\n            name=\"text\"\n            className=\"to-do-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"to-do-button edit\">Update Item</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add new item\"\n            value={input}\n            name=\"text\"\n            className=\"to-do-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"to-do-button\">Add New Item</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default ToDoForm;\n","import React, { useState } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport { AiOutlineCloseCircle, AiOutlineEdit } from \"react-icons/ai\";\n\nfunction ToDo({ toDos, completeToDo, removeToDo, updateToDo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateToDo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <ToDoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return toDos.map((toDo, index) => (\n    <div className={toDo.isComplete ? \"to-do-row complete\" : \"to-do-row\"} key={index}>\n      <div key={toDo.id} onClick={() => completeToDo(toDo.id)}>\n        {toDo.text}\n      </div>\n      <div className=\"icons\">\n        <AiOutlineCloseCircle onClick={() => removeToDo(toDo.id)} className=\"delete-icon\" />\n        <AiOutlineEdit onClick={() => setEdit({ id: toDo.id, value: toDo.text })} className=\"edit-icon\" />\n      </div>\n    </div>\n  ));\n}\n\nexport default ToDo;\n","import React, { useState } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const [toDos, setToDos] = useState([]);\n\n  const addToDo = (toDo) => {\n    if (!toDo.text || /^\\s*$/.test(toDo.text)) {\n      return;\n    }\n\n    const newToDos = [toDo, ...toDos];\n\n    setToDos(newToDos);\n  };\n\n  const updateToDo = (toDoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setToDos((prev) => prev.map((item) => (item.id === toDoId ? newValue : item)));\n  };\n\n  const removeToDo = (id) => {\n    const removeArr = [...toDos].filter((toDo) => toDo.id !== id);\n\n    setToDos(removeArr);\n  };\n\n  const completeToDo = (id) => {\n    let updatedToDos = toDos.map((toDo) => {\n      if (toDo.id === id) {\n        toDo.isComplete = !toDo.isComplete;\n      }\n      return toDo;\n    });\n    setToDos(updatedToDos);\n  };\n\n  return (\n    <div>\n      <h1>What is the plan for today?</h1>\n      <ToDoForm onSubmit={addToDo} />\n      <ToDo toDos={toDos} completeToDo={completeToDo} removeToDo={removeToDo} updateToDo={updateToDo} />\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <div className=\"to-do-list\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}